" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
scriptencoding utf-8
set encoding=utf-8

" ======== Keymaps
so ~/.vim/keymap.vim
nnoremap <C-tab> :tabnext<CR>

" ======== Vundle Initialization
so ~/.vim/plugs.vim

" ======== General Config
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set ignorecase
set autoread                    "Reload files changed outside vim
set mouse=a
let mapleader=","

" ======== Appearance
syntax on
color dracula
set termguicolors
set showmode
set t_Co=256
set t_ut= "Disable Background Color
set t_vb="" "Enable visualbell
set visualbell "Enable visualbell
set cursorline
set colorcolumn=80
set clipboard=unnamed
set number
set hidden
set list
set listchars=trail:·,tab:»\ ,eol:¬
let $nvim_tui_enable_true_color=1

" ======== Turn Off Swap Files
set noswapfile
set nobackup
set nowb

" ======== EasyMotion
nmap s <Plug>(easymotion-s2)
nmap t <Plug>(easymotion-t2)

" ======== Persistent Undo
if has('persistent_undo')
	silent !mkdir ~/.vim/backups > /dev/null 2>&1
	set undodir=~/.vim/backups
	set undofile
endif

" ======== Indentation & tab settings
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set nowrap "Don't wrap lines
set linebreak "Wrap lines at convenient points
filetype plugin on
filetype indent on

" ======== Completion
set wildmode=list:longest
set wildmenu "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
set wildignore+=*/target/*
set wildignore+=*.class
set wildignore+=*.pyc

" ======== Scrolling
set lazyredraw
set ttyfast
set scrolloff=5
set sidescrolloff=5
set sidescroll=1

" ======== NERDTree
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
let NERDTreeIgnore = ['\.pyc$']
let NERDTreeShowHidden = 1
let NERDTreeMapOpenVSplit='v'

" ======== Vim Airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" ======== Aleconfig
let g:ale_completion_enabled = 1
let g:ale_fix_on_save = 1
let g:ale_fixers = {
	\'*':         ['remove_trailing_lines', 'trim_whitespace'],
	\'python':    ['remove_trailing_lines', 'trim_whitespace', 'add_blank_lines_for_python_control_statements', 'pep8', 'isort'],
	\'tf':        ['remove_trailing_lines', 'trim_whitespace', 'terraform'],
	\'json':      ['remove_trailing_lines', 'trim_whitespace', 'prettier' ],
	\'yaml':      ['remove_trailing_lines', 'trim_whitespace', 'prettier']
\}
let g:ale_lint_on_enter = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_linters = {
	\'python':    ['pylint'],
	\'tf':        ['tflint'],
	\'yaml':      ['yamllint']
\}
let g:ale_python_pylint_change_directory = 0

" ======== Write as root if we dont' have permission
cnoremap w!! execute 'silent! write !sudo tee % >/dev/null' <bar> edit!

" ======== YAML Settings
au BufNewFile,BufRead *.yaml,*.yml so ~/.vim/syntax/yaml/yaml.vim

augroup customFileTypes
autocmd!
